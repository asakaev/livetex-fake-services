#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from livetex.dialog import Dialog
from livetex.dialog.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  DialogState request(DialogAttributes attributes)')
  print('  DialogState requestEmployee(Employee employee, DialogAttributes attributes)')
  print('  DialogState requestDepartment(Department department, DialogAttributes attributes)')
  print('  DialogState close()')
  print('  void vote(Vote vote)')
  print('  void typing(TypingMessage message)')
  print('  TextMessage sendTextMessage(string text)')
  print('  void confirmTextMessage(TextMessage message)')
  print('   messageHistory(i16 limit, i16 offset)')
  print('  DialogState getState()')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = Dialog.Client(protocol)
transport.open()

if cmd == 'request':
  if len(args) != 1:
    print('request requires 1 args')
    sys.exit(1)
  pp.pprint(client.request(eval(args[0]),))

elif cmd == 'requestEmployee':
  if len(args) != 2:
    print('requestEmployee requires 2 args')
    sys.exit(1)
  pp.pprint(client.requestEmployee(eval(args[0]),eval(args[1]),))

elif cmd == 'requestDepartment':
  if len(args) != 2:
    print('requestDepartment requires 2 args')
    sys.exit(1)
  pp.pprint(client.requestDepartment(eval(args[0]),eval(args[1]),))

elif cmd == 'close':
  if len(args) != 0:
    print('close requires 0 args')
    sys.exit(1)
  pp.pprint(client.close())

elif cmd == 'vote':
  if len(args) != 1:
    print('vote requires 1 args')
    sys.exit(1)
  pp.pprint(client.vote(eval(args[0]),))

elif cmd == 'typing':
  if len(args) != 1:
    print('typing requires 1 args')
    sys.exit(1)
  pp.pprint(client.typing(eval(args[0]),))

elif cmd == 'sendTextMessage':
  if len(args) != 1:
    print('sendTextMessage requires 1 args')
    sys.exit(1)
  pp.pprint(client.sendTextMessage(args[0],))

elif cmd == 'confirmTextMessage':
  if len(args) != 1:
    print('confirmTextMessage requires 1 args')
    sys.exit(1)
  pp.pprint(client.confirmTextMessage(eval(args[0]),))

elif cmd == 'messageHistory':
  if len(args) != 2:
    print('messageHistory requires 2 args')
    sys.exit(1)
  pp.pprint(client.messageHistory(eval(args[0]),eval(args[1]),))

elif cmd == 'getState':
  if len(args) != 0:
    print('getState requires 0 args')
    sys.exit(1)
  pp.pprint(client.getState())

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
